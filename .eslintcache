[{"F:\\leyla-components\\src\\index.tsx":"1","F:\\leyla-components\\src\\reportWebVitals.ts":"2","F:\\leyla-components\\src\\App.tsx":"3","F:\\leyla-components\\src\\components\\Button\\Button.tsx":"4","F:\\leyla-components\\src\\components\\Menu\\menuItem.tsx":"5","F:\\leyla-components\\src\\components\\Menu\\menu.tsx":"6","F:\\leyla-components\\src\\components\\Menu\\subMenu.tsx":"7","F:\\leyla-components\\src\\components\\Icon\\icon.tsx":"8","F:\\leyla-components\\src\\components\\Transition\\transition.tsx":"9","F:\\leyla-components\\src\\stories\\Button.stories.tsx":"10","F:\\leyla-components\\src\\stories\\Page.stories.tsx":"11","F:\\leyla-components\\src\\stories\\Header.stories.tsx":"12","F:\\leyla-components\\src\\stories\\Header.tsx":"13","F:\\leyla-components\\src\\stories\\Page.tsx":"14","F:\\leyla-components\\src\\stories\\Button.tsx":"15","F:\\leyla-components\\src\\components\\Button\\button.stories.tsx":"16","F:\\leyla-components\\src\\components\\Menu\\menu.stories.tsx":"17","F:\\leyla-components\\src\\components\\Input\\input.stories.tsx":"18","F:\\leyla-components\\src\\components\\Input\\input.tsx":"19","F:\\leyla-components\\src\\components\\AutoComplete\\autoComplete.stories.tsx":"20","F:\\leyla-components\\src\\components\\AutoComplete\\autoComplete.tsx":"21","F:\\leyla-components\\src\\hooks\\useDebounce.tsx":"22","F:\\leyla-components\\src\\hooks\\useClickOutside.tsx":"23","F:\\leyla-components\\src\\components\\Upload\\upload.stories.tsx":"24","F:\\leyla-components\\src\\components\\Upload\\upload.tsx":"25","F:\\leyla-components\\src\\components\\Upload\\uploadList.tsx":"26","F:\\leyla-components\\src\\components\\Progress\\index.tsx":"27","F:\\leyla-components\\src\\components\\Progress\\progress.tsx":"28","F:\\leyla-components\\src\\components\\Upload\\dragger.tsx":"29"},{"size":508,"mtime":1611554805095,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1364,"mtime":1611978722058,"results":"33","hashOfConfig":"31"},{"size":1376,"mtime":1612149328968,"results":"34","hashOfConfig":"31"},{"size":831,"mtime":1611820668517,"results":"35","hashOfConfig":"31"},{"size":2016,"mtime":1612151666992,"results":"36","hashOfConfig":"31"},{"size":2577,"mtime":1612165129461,"results":"37","hashOfConfig":"31"},{"size":633,"mtime":1611973028954,"results":"38","hashOfConfig":"31"},{"size":828,"mtime":1611987552542,"results":"39","hashOfConfig":"31"},{"size":804,"mtime":499162500000,"results":"40","hashOfConfig":"31"},{"size":605,"mtime":499162500000,"results":"41","hashOfConfig":"31"},{"size":510,"mtime":499162500000,"results":"42","hashOfConfig":"31"},{"size":1356,"mtime":499162500000,"results":"43","hashOfConfig":"31"},{"size":2415,"mtime":499162500000,"results":"44","hashOfConfig":"31"},{"size":941,"mtime":499162500000,"results":"45","hashOfConfig":"31"},{"size":513,"mtime":1612239922234,"results":"46","hashOfConfig":"31"},{"size":1015,"mtime":1612155499487,"results":"47","hashOfConfig":"31"},{"size":1176,"mtime":1612326672284,"results":"48","hashOfConfig":"31"},{"size":2246,"mtime":1612324122668,"results":"49","hashOfConfig":"31"},{"size":1308,"mtime":1612247194057,"results":"50","hashOfConfig":"31"},{"size":4760,"mtime":1612253330337,"results":"51","hashOfConfig":"31"},{"size":384,"mtime":1612248083784,"results":"52","hashOfConfig":"31"},{"size":544,"mtime":1612253164365,"results":"53","hashOfConfig":"31"},{"size":1242,"mtime":1612355744770,"results":"54","hashOfConfig":"31"},{"size":5344,"mtime":1612355291596,"results":"55","hashOfConfig":"31"},{"size":1474,"mtime":1612347728730,"results":"56","hashOfConfig":"31"},{"size":58,"mtime":1612342879174,"results":"57","hashOfConfig":"31"},{"size":887,"mtime":1612342902154,"results":"58","hashOfConfig":"31"},{"size":924,"mtime":1612355238137,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"58cxm",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"F:\\leyla-components\\src\\index.tsx",[],["124","125"],"F:\\leyla-components\\src\\reportWebVitals.ts",[],"F:\\leyla-components\\src\\App.tsx",["126","127"],"F:\\leyla-components\\src\\components\\Button\\Button.tsx",[],["128","129"],"F:\\leyla-components\\src\\components\\Menu\\menuItem.tsx",[],"F:\\leyla-components\\src\\components\\Menu\\menu.tsx",[],"F:\\leyla-components\\src\\components\\Menu\\subMenu.tsx",[],"F:\\leyla-components\\src\\components\\Icon\\icon.tsx",[],"F:\\leyla-components\\src\\components\\Transition\\transition.tsx",[],"F:\\leyla-components\\src\\stories\\Button.stories.tsx",[],"F:\\leyla-components\\src\\stories\\Page.stories.tsx",[],"F:\\leyla-components\\src\\stories\\Header.stories.tsx",[],"F:\\leyla-components\\src\\stories\\Header.tsx",[],"F:\\leyla-components\\src\\stories\\Page.tsx",[],"F:\\leyla-components\\src\\stories\\Button.tsx",[],"F:\\leyla-components\\src\\components\\Button\\button.stories.tsx",[],"F:\\leyla-components\\src\\components\\Menu\\menu.stories.tsx",[],"F:\\leyla-components\\src\\components\\Input\\input.stories.tsx",[],"F:\\leyla-components\\src\\components\\Input\\input.tsx",[],"F:\\leyla-components\\src\\components\\AutoComplete\\autoComplete.stories.tsx",[],"F:\\leyla-components\\src\\components\\AutoComplete\\autoComplete.tsx",["130"],"import React, {\r\n  FC,\r\n  useState,\r\n  ChangeEvent,\r\n  KeyboardEvent,\r\n  ReactElement,\r\n  useEffect,\r\n  useRef,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport Input, { InputProps } from '../Input/input';\r\nimport Icon from '../Icon/icon';\r\nimport Transition from '../Transition/transition';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport useClickOutside from '../../hooks/useClickOutside';\r\n\r\ninterface DataSourceObj {\r\n  value: string;\r\n}\r\n\r\n//交叉类型\r\nexport type DataSourceType<T = {}> = T & DataSourceObj;\r\n\r\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\r\n  fetchSuggestions: (\r\n    str: string\r\n  ) => DataSourceType[] | Promise<DataSourceType[]>;\r\n  onSelect?: (item: DataSourceType) => void;\r\n  renderOptions?: (item: DataSourceType) => ReactElement;\r\n}\r\n\r\nexport const AutoComplete: React.FC<AutoCompleteProps> = (props) => {\r\n  const {\r\n    fetchSuggestions,\r\n    onSelect,\r\n    value,\r\n    renderOptions,\r\n    ...restProps\r\n  } = props;\r\n  const [inputValue, setInputValue] = useState(value as string);\r\n  const [suggestions, setSuggestions] = useState<DataSourceType[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [highlightIndex, setHighlightIndex] = useState(-1);\r\n  const triggerSearch = useRef(false);\r\n  const componentRef = useRef<HTMLDivElement>(null);\r\n  const debouncedValue = useDebounce(inputValue, 500);\r\n  useClickOutside(componentRef, () => {\r\n    setSuggestions([]);\r\n  });\r\n  useEffect(() => {\r\n    if (debouncedValue && triggerSearch.current) {\r\n      setSuggestions([]);\r\n      const results = fetchSuggestions(debouncedValue);\r\n      if (results instanceof Promise) {\r\n        setLoading(true);\r\n        results.then((data) => {\r\n          setLoading(false);\r\n          setSuggestions(data);\r\n          if (data.length > 0) {\r\n            setShowDropdown(true);\r\n          }\r\n        });\r\n      } else {\r\n        setSuggestions(results);\r\n        setShowDropdown(true);\r\n        if (results.length > 0) {\r\n          setShowDropdown(true);\r\n        }\r\n      }\r\n    } else {\r\n      setShowDropdown(false);\r\n    }\r\n    setHighlightIndex(-1);\r\n  }, [debouncedValue, fetchSuggestions]);\r\n\r\n  const highlight = (index: number) => {\r\n    if (index < 0) index = 0;\r\n    if (index >= suggestions.length) {\r\n      index = suggestions.length - 1;\r\n    }\r\n    setHighlightIndex(index);\r\n  };\r\n  const handleSelect = (item: DataSourceType) => {\r\n    setInputValue(item.value);\r\n    setSuggestions([]);\r\n    if (onSelect) {\r\n      onSelect(item);\r\n    }\r\n    triggerSearch.current = false;\r\n  };\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setInputValue(value);\r\n    triggerSearch.current = true;\r\n  };\r\n\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.keyCode) {\r\n      case 13:\r\n        if (suggestions[highlightIndex]) {\r\n          handleSelect(suggestions[highlightIndex]);\r\n        }\r\n\r\n        break;\r\n      case 38:\r\n        highlight(highlightIndex - 1);\r\n        break;\r\n      case 40:\r\n        highlight(highlightIndex + 1);\r\n        break;\r\n      case 27:\r\n        setSuggestions([]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const renderTemplate = (item: DataSourceType) =>\r\n    renderOptions ? renderOptions(item) : item.value;\r\n\r\n  const generateDropdown = () => {\r\n    return (\r\n      <Transition\r\n        in={showDropdown || loading}\r\n        animation=\"zoom-in-top\"\r\n        timeout={300}\r\n        onExited={() => {\r\n          setSuggestions([]);\r\n        }}\r\n      >\r\n        <ul className=\"ly-suggestion-list\">\r\n          {loading && (\r\n            <div className=\"suggstions-loading-icon\">\r\n              <Icon icon=\"spinner\" spin />\r\n            </div>\r\n          )}\r\n          {suggestions.map((item, index) => {\r\n            const cnames = classNames('suggestion-item', {\r\n              'is-active': index === highlightIndex,\r\n            });\r\n            return (\r\n              <li\r\n                key={index}\r\n                className={cnames}\r\n                onClick={() => handleSelect(item)}\r\n              >\r\n                {renderTemplate(item)}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Transition>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"ly-auto-complete\" ref={componentRef}>\r\n      <Input\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        {...restProps}\r\n      />\r\n      {loading && (\r\n        <ul>\r\n          <Icon icon=\"spinner\" spin />\r\n        </ul>\r\n      )}\r\n      {suggestions.length > 0 && generateDropdown()}\r\n    </div>\r\n  );\r\n};\r\n","F:\\leyla-components\\src\\hooks\\useDebounce.tsx",["131"],"import React, { useEffect, useState } from 'react'\r\n\r\nfunction useDebounce(value:any,delay=300){\r\n  const [debouncedValue,setDebouncedValue] = useState(value)\r\n  useEffect(()=>{\r\n    const handler = window.setTimeout(()=>{\r\n      setDebouncedValue(value)\r\n    },delay)\r\n    return ()=>clearTimeout(handler)\r\n  },[value,delay])\r\n  return debouncedValue\r\n}\r\n\r\nexport default useDebounce","F:\\leyla-components\\src\\hooks\\useClickOutside.tsx",[],"F:\\leyla-components\\src\\components\\Upload\\upload.stories.tsx",["132"],"import React from 'react';\r\n// also exported from '@storybook/react' if you can deal with breaking changes in 6.1\r\nimport { Story, Meta } from '@storybook/react/types-6-0';\r\nimport { action } from '@storybook/addon-actions';\r\nimport Upload, { UploadProps } from './upload';\r\nimport Icon from '../Icon/icon';\r\n\r\nexport default {\r\n  title: 'Upload',\r\n  component: Upload,\r\n} as Meta;\r\n\r\nconst Template: Story<UploadProps> = (args) => (\r\n  <Upload {...args}>\r\n    <Icon icon=\"upload\" size=\"5x\" theme=\"secondary\" />\r\n  </Upload>\r\n);\r\n\r\nconst checkFileSize = (file: File) => {\r\n  if (Math.round(file.size / 1024) > 50) {\r\n    alert('file too large');\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst filePromise = (file: File) => {\r\n  const newFile = new File([file], 'new_name.docx', { type: file.type });\r\n  return Promise.resolve(newFile);\r\n};\r\n\r\nexport const UploadWithCheck = Template.bind({});\r\nUploadWithCheck.args = {\r\n  onChange: action('changed'),\r\n  action: 'https://jsonplaceholder.typicode.com/posts/',\r\n  drag: true,\r\n};\r\n\r\nexport const UploadWithPromise = Template.bind({});\r\nUploadWithPromise.args = {\r\n  onChange: action('changed'),\r\n  action: 'https://jsonplaceholder.typicode.com/posts/',\r\n  beforeUpload: filePromise,\r\n};\r\n","F:\\leyla-components\\src\\components\\Upload\\upload.tsx",["133"],"import axios from 'axios';\r\nimport React, { ChangeEvent, useRef, useState } from 'react';\r\nimport Button from '../Button/Button';\r\nimport Dragger from './dragger';\r\nimport UploadList from './uploadList';\r\n\r\nexport type UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error';\r\n\r\nexport interface UploadFile {\r\n  uid: string;\r\n  size: number;\r\n  name: string;\r\n  status?: UploadFileStatus;\r\n  percent?: number;\r\n  raw?: File;\r\n  response?: any;\r\n  error?: any;\r\n}\r\n\r\nexport interface UploadProps {\r\n  /**上传文件接口 */\r\n  action: string;\r\n  defaultFileList?: UploadFile[];\r\n  /**上传文件之前的生命周期，便于用户做一些验证处理或者对文件的转换*/\r\n  beforeUpload?: (file: File) => boolean | Promise<File>;\r\n  onProgress?: (percentage: number, file: File) => void;\r\n  onSuccess?: (data: any, file: File) => void;\r\n  onError?: (err: any, file: File) => void;\r\n  onChange?: (file: File) => void;\r\n  onRemove?: (file: UploadFile) => void;\r\n  /**post header */\r\n  header?: { [key: string]: any };\r\n  name?: string;\r\n  data?: { [key: string]: any };\r\n  withCredentials?: boolean;\r\n  accept?: string;\r\n  multiple?: boolean;\r\n  drag?: boolean;\r\n}\r\n\r\nexport const Upload: React.FC<UploadProps> = (props) => {\r\n  const {\r\n    action,\r\n    defaultFileList,\r\n    beforeUpload,\r\n    onProgress,\r\n    onSuccess,\r\n    onError,\r\n    onChange,\r\n    onRemove,\r\n    name,\r\n    header,\r\n    data,\r\n    withCredentials,\r\n    accept,\r\n    multiple,\r\n    drag,\r\n    children,\r\n  } = props;\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n  const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || []);\r\n\r\n  const updateFileList = (\r\n    updateFile: UploadFile,\r\n    updateObj: Partial<UploadFile>\r\n  ) => {\r\n    setFileList((prevList) =>\r\n      prevList.map((file) => {\r\n        if (file.uid === updateFile.uid) {\r\n          return { ...file, ...updateObj };\r\n        } else {\r\n          return file;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (fileInput.current) {\r\n      fileInput.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (!files) return;\r\n    uploadFiles(files);\r\n    if (fileInput.current) {\r\n      fileInput.current.value = '';\r\n    }\r\n  };\r\n\r\n  const post = (file: File) => {\r\n    let _file: UploadFile = {\r\n      uid: Date.now() + 'upload-file',\r\n      status: 'ready',\r\n      name: file.name,\r\n      size: file.size,\r\n      percent: 0,\r\n      raw: file,\r\n    };\r\n    // setFileList([_file, ...fileList]);\r\n    setFileList((prevList) => [_file, ...prevList]);\r\n    const formData = new FormData();\r\n    if (data) {\r\n      Object.keys(data).forEach((key) => {\r\n        formData.append(key, data[key]);\r\n      });\r\n    }\r\n    formData.append(name || 'file', file);\r\n    axios\r\n      .post(action, formData, {\r\n        headers: {\r\n          ...header,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        withCredentials,\r\n        onUploadProgress: (e) => {\r\n          let percentage = Math.round((e.loaded * 100) / e.total) || 0;\r\n          if (percentage < 100) {\r\n            updateFileList(_file, { percent: percentage, status: 'uploading' });\r\n            if (onProgress) {\r\n              onProgress(percentage, file);\r\n            }\r\n          }\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        updateFileList(_file, { status: 'success', response: res.data });\r\n        if (onSuccess) {\r\n          onSuccess(res.data, file);\r\n        }\r\n        if (onChange) {\r\n          onChange(file);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        updateFileList(_file, { status: 'error', error: err });\r\n        if (onError) {\r\n          onError(err, file);\r\n        }\r\n        if (onChange) {\r\n          onChange(file);\r\n        }\r\n      });\r\n  };\r\n\r\n  const uploadFiles = (files: FileList) => {\r\n    let postFiles = Array.from(files);\r\n    postFiles.forEach((file) => {\r\n      if (!beforeUpload) {\r\n        post(file);\r\n      } else {\r\n        const result = beforeUpload(file);\r\n        if (result && result instanceof Promise) {\r\n          result.then((processedFile) => post(processedFile));\r\n        } else if (result !== false) {\r\n          post(file);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const handleRemove = (file: UploadFile) => {\r\n    setFileList((prevList) => {\r\n      return prevList.filter((item) => item.uid !== file.uid);\r\n    });\r\n    if (onRemove) {\r\n      onRemove(file);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"ly-upload-component\">\r\n      <div className=\"ly-upload-input\" onClick={handleClick}>\r\n        {drag ? (\r\n          <Dragger\r\n            onFile={(files) => {\r\n              uploadFiles(files);\r\n            }}\r\n          >\r\n            {children}\r\n          </Dragger>\r\n        ) : (\r\n          children\r\n        )}\r\n        <input\r\n          className=\"ly-file-input\"\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n          ref={fileInput}\r\n          multiple={multiple}\r\n          accept={accept}\r\n          onChange={handleFileChange}\r\n        />\r\n      </div>\r\n\r\n      <UploadList fileList={fileList} onRemove={handleRemove} />\r\n    </div>\r\n  );\r\n};\r\n\r\nUpload.defaultProps = {\r\n  name: 'file',\r\n};\r\n\r\nexport default Upload;\r\n","F:\\leyla-components\\src\\components\\Upload\\uploadList.tsx",[],"F:\\leyla-components\\src\\components\\Progress\\index.tsx",[],"F:\\leyla-components\\src\\components\\Progress\\progress.tsx",[],"F:\\leyla-components\\src\\components\\Upload\\dragger.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":18,"nodeType":"140","messageId":"141","endLine":5,"endColumn":28},{"ruleId":"138","severity":1,"message":"142","line":5,"column":30,"nodeType":"140","messageId":"141","endLine":5,"endColumn":40},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","severity":1,"message":"145","line":2,"column":3,"nodeType":"140","messageId":"141","endLine":2,"endColumn":5},{"ruleId":"138","severity":1,"message":"146","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"147","line":19,"column":7,"nodeType":"140","messageId":"141","endLine":19,"endColumn":20},{"ruleId":"138","severity":1,"message":"148","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'ButtonSize' is defined but never used.","Identifier","unusedVar","'ButtonType' is defined but never used.",["149"],["150"],"'FC' is defined but never used.","'React' is defined but never used.","'checkFileSize' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]